import{_ as o,c as d,a3 as c,o as p}from"./chunks/framework.DtMx7FFi.js";const u=JSON.parse('{"title":"项目简介","description":"","frontmatter":{"title":"项目简介","icon":"creative"},"headers":[],"relativePath":"cosmos/guide.md","filePath":"cosmos/guide.md","lastUpdated":1723607527000}'),a={name:"cosmos/guide.md"};function t(r,e,i,s,n,l){return p(),d("div",null,e[0]||(e[0]=[c('<h2 id="项目引言" tabindex="-1">项目引言 <a class="header-anchor" href="#项目引言" aria-label="Permalink to &quot;项目引言&quot;">​</a></h2><p>在信息化时代，软件已经成为人们生产、生活、娱乐等方方面面的必需品。为了满足不同行业、不同领域的需求，软件项目也在不断地发展和更新。</p><p>本项目是基于 <code>CSharp</code> 和 <code>Vue</code> 开发的，旨在提供高效、便捷、实用的功能，帮助用户更好地完成工作任务和解决问题。<code>CSharp</code> 是一种强类型、面向对象的编程语言，广泛应用于 <code>Windows 桌面应用程序</code>、 <code>Web 应用程序</code>和<code>游戏</code>等领域，同时也是 <code>.NET Framework</code> 和 <code>.NET Core</code> 技术的核心语言。<code>Vue</code> 是一种现代化的 <code>JavaScript 框架</code>，广泛应用于 <code>Web 前端开发</code>，具有易用、高效、灵活等优点。</p><p>本软件项目采用 <code>CSharp</code> 和 <code>Vue</code> 作为基础设施，并利用它们各自的优点，可以大大提高软件开发的效率和质量。同时，本软件项目采用了<code>敏捷开发</code>的方法，注重用户反馈和不断迭代，以不断优化软件的功能和性能。</p><p>我相信，本框架和组件库项目将为你带来更多便利和效率。</p><p>——ChatGPT</p><h2 id="名称由来" tabindex="-1">名称由来 <a class="header-anchor" href="#名称由来" aria-label="Permalink to &quot;名称由来&quot;">​</a></h2><blockquote><p>碧落降恩承淑颜，共挚崎缘挽曦寒。</p><p>迁般故事终成忆，谨此葳蕤换思短。</p></blockquote><p>她名曦寒，因上诗所述，故名。</p><p>项目：中文名称<code>曦寒</code>，英文名称<code>XiHan</code>。</p><p>社区：中文名称<code>曦寒懿</code>，英文名称<code>XiHanFun</code>。</p><p>Github 和 Gitee 访问域相同。</p><p>官方根域名为<code>xihanfun.com</code>，欢迎访问和体验。</p><p>——致她</p><h2 id="斗胆自序" tabindex="-1">斗胆自序 <a class="header-anchor" href="#斗胆自序" aria-label="Permalink to &quot;斗胆自序&quot;">​</a></h2><p>白衣无尘，亦如初见。感恩臻遇，有幸得识。我是<code>摘繁华</code>。</p><p>大家可能会好奇，为什么我的全网圈名叫做<code>摘繁华</code>？其实这个名字，取自我初中时写的一首忘了叫什么名字的词中句：<code>繁华扑尘，有谁堪摘？</code>大概意思是：“如此盛世，竟有很多高识、大神落入历史的长河，有谁愿意以孤身羽化为风险，揽住这些被后世希望长存的技艺和记忆？”既然都不敢，那便我来。故名。</p><p>曾经，我在我的个人主页这样写：<code>受德于儒之“怒道”、“民主”、“仁德”，道之“辩证”、“道法自然”，墨之“科学”、“兼爱”、“尚贤”，法之“唯物”</code>。</p><p>可能你看到这里就笑了，为何发笑，我不得而知，但总感觉我这话有点自欺欺人。</p><p>但，请听我“狡辩”。</p><p><code>道家</code>和<code>儒家</code>是<code>中国传统哲学</code>中的两大流派，它们分别代表了不同的思维方式和价值观。道家<code>强调自然、无为而治，追求天人合一的境界</code>；儒家则<code>强调人伦、仁义礼智信，追求和谐、有序的社会</code>。我从小就接受传统教育，而当下，多是以儒学为根基的教育，而儒家经典初高中时没少背诵，老子的名篇也没少读，法家墨家也偶尔在身边都能遇到，甚至还有我没说的佛学，什么如来、观音，没错吧？这下释然了吧。</p><p>但是，你接受了，我反而不接受了，这也是上文我说“曾经”的原因。为什么呢？</p><p>后来我想，不管哪一派学说，我应该都属于<code>叛逆者</code>。</p><p>举个例子：<code>佛家思想</code>。</p><p>我期待神灵的眷顾。但却不切实际，因为我不虔诚。虔诚的根源在于敬畏神。这种由心而生的敬畏，或许是因为，寺院的庄严，填补了己身内心的恐惧，从而对神产生的依赖。不过，神却又不能切切实实解决困难，众生有苦，佛来超度，实际上也只是心理上的安慰。再加上佛教虽历朝历代传承下来，但溯其根源却是外教，西方的上帝也一样，因此，对这种依赖就有了隔阂。反观道教，讲究修身养性，身不达，性不豁，难以成就。其教意的根本在于，通过努力达到目标，而非佛家一样站在道德和人性的高度上，谴责或者迫使众生并美其名曰超度。这种乾坤，源于自然又回归自然，不得不让人敬仰，这种敬仰无时无刻存在着，且是本意的，没有杂念的，而非人为的，强制的。传承的时候，也是传承的大道规则。所以，面对神灵，我不够虔诚。或许这种大道规则，才能真正的给我心灵上的洗涤，而这正是我需要的。</p><p>再举个例子：<code>儒家思想</code>。</p><p>比如孝，本就是一种普通生物都遵从的法则，在儒家变成了一个人性制高点，变成了枷锁，变成了教义。我受教于儒，但我不得不判离儒，注意这里的“叛离”二字用的就是儒家话术。一样的道理，适者生存这种大道规则，也会被演化成条条框框，儒所谓正道。人之教育，所处环境、亲朋、机缘、思想，铸就了文化。到头来却发现，文化竟是衡量你人生高度的一个标杆，这就又回到了儒。爱好的文学，又大部分需要引用儒家经典来论证，就像数学当中用公理来证明定理一样，这样就源源不断的造就了学术回流。而这整个过程不正是道家思想吗？</p><p>可以看到，上两例我好像偏向于<code>道</code>，但，<code>道和其他学说</code>或多或少也有很多观点我持怀疑度，也许因<code>境界还没达到而难以触及</code>。</p><p>因此，我属于<code>叛逆者</code>，<code>各家都逃离，却又都融入</code>。准确说，<code>我既不是唯物主义者，也不是唯心主义者</code>，谦谨来说应该属于<code>辩证统一者</code>，是内心使然的崇尚自然人文和追求精神自由。</p><p>就像这个项目，是基于 CSharp 和 Vue 开发的，旨在提供高效、便捷、实用的功能，帮助同样因兴趣使然的你更好地完成工作任务和解决问题。而，在创建时起到整个开发过程中，我也借鉴了道家和儒家的思想，结合它们的学说，注重<code>软件的实用性和人文关怀</code>，追求<code>技术和人文的统一</code>。</p><p>道家思想强调<code>自然、无为而治</code>，这也是我在软件设计和开发中所追求的目标。我注重用户体验和易用性，希望软件可以<code>像自然一样流畅，为你带来更多的便利和舒适</code>。同时，我也尽力减少软件的复杂度和冗余，遵循“道法自然”的原则，让软件的设计和使用更加简单。</p><p>儒家思想则强调<code>人伦、仁义礼智信</code>，这也是我在软件开发中所注重的价值观。我希望软件可以<code>为用户提供有用功能和服务的同时也遵循道德和法律的规范，更注重信息安全和用户隐私保护</code>。在开发过程中，我也尽量遵循“礼尚往来”的原则，注重与像你一样的用户之间的互动和交流，不断改进软件的功能和性能。</p><p>在开发中，道家和儒家的学说虽然不是直接的技术指导，但它们所代表的思维方式和价值观，对我的软件开发和设计都有着积极的影响和指导意义。我相信，本项目将成为你以后工作和生活中不可或缺的助手，为你带来更多便利和效率。</p><p>最开始，项目仅以做<code>博客</code>的想法出发。后来，因国际国内环境影响，知识累积和见识拓张，做了诸多平台项目，遂逐步将其封装为通用功能，以便于复用。直至最后，定位为：<code>快速、轻量、高效、用心的框架和组件库</code>。</p><p>我的<code>预想</code>是这样的：</p><p>后端：通用开发框架，能快速构建服务，投入生产；</p><p>前端：通用视图组件库，能快速构建页面，实现交互功能；</p><p>用例：后端、前端的组合，不仅仅是一个结合用例，还是一个用作高效搭建项目的完整应用，可拿来即用。</p><p>如此等等……</p><p>——摘繁华</p><h2 id="诚挚致谢" tabindex="-1">诚挚致谢 <a class="header-anchor" href="#诚挚致谢" aria-label="Permalink to &quot;诚挚致谢&quot;">​</a></h2><p>感谢贡献代码的每一位朋友。</p><p>感谢<code>CSharp</code>和<code>Vue</code>作为本项目语言支撑的基础设施。</p><p>感谢<code>Visual Studio</code>、<code>Visual Studio Code</code>、<code>JetBrains Rider</code>、<code>Xshell</code>、<code>Xftp</code>、<code>Typora</code>作为本项目的开发、测试和编辑的基础设施。</p><p>感谢<code>VitePress</code>作为搭建本文档的基础设施。</p><p>感谢<code>ChatGPT</code>作为某些文档论述的基础设施。</p>',46)]))}const m=o(a,[["render",t]]);export{u as __pageData,m as default};
