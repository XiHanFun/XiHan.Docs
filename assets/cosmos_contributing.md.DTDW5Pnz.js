import{_ as a,c as i,o as n,ag as t}from"./chunks/framework.C4nOkCZI.js";const c=JSON.parse('{"title":"如何为项目贡献代码","description":"","frontmatter":{},"headers":[],"relativePath":"cosmos/contributing.md","filePath":"cosmos/contributing.md","lastUpdated":1747775887000}'),e={name:"cosmos/contributing.md"};function l(p,s,h,r,k,d){return n(),i("div",null,[...s[0]||(s[0]=[t(`<h1 id="如何为项目贡献代码" tabindex="-1">如何为项目贡献代码 <a class="header-anchor" href="#如何为项目贡献代码" aria-label="Permalink to &quot;如何为项目贡献代码&quot;">​</a></h1><h2 id="一、准备工作" tabindex="-1">一、准备工作 <a class="header-anchor" href="#一、准备工作" aria-label="Permalink to &quot;一、准备工作&quot;">​</a></h2><ul><li><p>安装 Git；</p></li><li><p>安装 Sourcetree，这个工具是 git 的一种图形化界面；</p></li><li><p>注意安装 git 的时候记得勾选将 git 所在目录添加到系统环境变量；</p></li></ul><details><summary>1.DotNet项目</summary><ul><li><p>安装 Visual Studio 2022；</p></li><li><p>安装 Visual Studio 2022 的 CodeMaid 扩展插件，这个插件可以自动格式化代码；</p></li><li><p><code>若有新功能开发</code>，请添加文件头，这在后续修改代码文件或多人合作项目时有莫大的好处。如下为我的示例：</p></li></ul><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">region</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;&lt;版权版本注释&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ----------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Copyright ©2024 ZhaiFanhua All Rights Reserved.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Licensed under the MIT License. See LICENSE in the project root for license information.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// FileName:ChatHub</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Guid:ee669dee-30c7-4d21-8eb4-f24d8dc0f44c</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Author:zhaifanhua</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Email:me@zhaifanhua.com</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CreatedTime:2024-04-16 上午 03:59:25</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ----------------------------------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endregion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;&lt;版权版本注释&gt;&gt;</span></span></code></pre></div><p>下面就来说说怎么创建并修改默认模板。</p><h4 id="_1-新建模板文件" tabindex="-1">1.新建模板文件 <a class="header-anchor" href="#_1-新建模板文件" aria-label="Permalink to &quot;1.新建模板文件&quot;">​</a></h4><blockquote><p>注意：我所用环境为 Visual Studio 2022，以下模板适合 C#10 新语法，旧语法及旧版本以类似方法修改。</p></blockquote><p>在空白目录创建以下三个文件：</p><p>Class.cs</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">region</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;&lt;版权版本注释&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ----------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Copyright ©$year$ ZhaiFanhua All Rights Reserved.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Licensed under the MIT License. See LICENSE in the project root for license information.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// FileName:$safeitemname$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Guid:$guid1$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Author:$username$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Email:me@zhaifanhua.com</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CreateTime:$time$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ----------------------------------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endregion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;&lt;版权版本注释&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootnamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">summary</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// $safeitemrootname$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">summary</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class $safeitemrootname$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Controller.cs <code>这里仅为ApiController</code></p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">region</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;&lt;版权版本注释&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ----------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Copyright ©$year$ ZhaiFanhua All Rights Reserved.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Licensed under the MIT License. See LICENSE in the project root for license information.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// FileName:$safeitemname$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Guid:$guid1$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Author:$username$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Email:me@zhaifanhua.com</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CreateTime:$time$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ----------------------------------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endregion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;&lt;版权版本注释&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootnamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">summary</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// $safeitemrootname$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">summary</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;api/[controller]&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ApiController</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> class $safeitemname$ : ControllerBase</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Interface.cs</p><div class="language-csharp vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csharp</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">region</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;&lt;版权版本注释&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ----------------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Copyright ©$year$ ZhaiFanhua All Rights Reserved.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Licensed under the MIT License. See LICENSE in the project root for license information.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// FileName:$safeitemname$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Guid:$guid1$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Author:$username$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Email:me@zhaifanhua.com</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CreateTime:$time$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ----------------------------------------------------------------</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">endregion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;&lt;版权版本注释&gt;&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">namespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootnamespace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">summary</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// $safeitemrootname$</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/// &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">summary</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> interface $safeitemrootname$</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="_2-找到模板目录并复制" tabindex="-1">2.找到模板目录并复制 <a class="header-anchor" href="#_2-找到模板目录并复制" aria-label="Permalink to &quot;2.找到模板目录并复制&quot;">​</a></h4><p>例如安装的 Visual Studio 2022 在 C 盘，则对应的模板目录在：</p><p>Class</p><blockquote><p>C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\ItemTemplates\\CSharp\\Code\\2052\\Class C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\ItemTemplates\\AspNetCore\\Code\\1033\\Class</p></blockquote><p>Interface</p><blockquote><p>C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\ItemTemplates\\CSharp\\Code\\2052\\Interface C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\ItemTemplates\\AspNetCore\\Code\\1033\\Interface</p></blockquote><p>Controller</p><blockquote><p>C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\ItemTemplates\\AspNetCore\\Web\\ASP.NET\\1033\\WebApiEmptyController</p></blockquote></details><details><summary>2.Vue项目</summary><ul><li><p>安装 Visual Studio Code；</p></li><li><p>安装 Visual Studio Code 的 Prettier - Code formatter 扩展插件，这个插件可以自动格式化代码；</p></li></ul></details><h2 id="二、贡献代码" tabindex="-1">二、贡献代码 <a class="header-anchor" href="#二、贡献代码" aria-label="Permalink to &quot;二、贡献代码&quot;">​</a></h2><h3 id="_1-新建自己的分支-fork" tabindex="-1">1. 新建自己的分支（Fork） <a class="header-anchor" href="#_1-新建自己的分支-fork" aria-label="Permalink to &quot;1. 新建自己的分支（Fork）&quot;">​</a></h3><p>将本项目仓库 fork 到自己的 git 仓库中。</p><h3 id="_2-克隆-clone" tabindex="-1">2. 克隆（Clone） <a class="header-anchor" href="#_2-克隆-clone" aria-label="Permalink to &quot;2. 克隆（Clone）&quot;">​</a></h3><p>将已经 fork 的仓库 clone 到自己的本地 PC。</p><h3 id="_3-创建本地分支" tabindex="-1">3. 创建本地分支 <a class="header-anchor" href="#_3-创建本地分支" aria-label="Permalink to &quot;3. 创建本地分支&quot;">​</a></h3><p>如果想要在本项目上做自己的开发，最好创建属于自己的项目分支，如果是直接贡献代码，那么可以直接在 dev 分支上进行操作。</p><h3 id="_4-开发" tabindex="-1">4. 开发 <a class="header-anchor" href="#_4-开发" aria-label="Permalink to &quot;4. 开发&quot;">​</a></h3><ol><li>发现了一个小 Bug 并进行修改。</li><li>在打开的 Issues 中选择功能并进行开发。</li></ol><h3 id="_5-提交-commit" tabindex="-1">5. 提交（Commit） <a class="header-anchor" href="#_5-提交-commit" aria-label="Permalink to &quot;5. 提交（Commit）&quot;">​</a></h3><p>向本地仓库提交 Bug。</p><p>这里是 Git 提交信息前缀规则：</p><table tabindex="0"><thead><tr><th>前缀</th><th>描述</th><th>示例</th></tr></thead><tbody><tr><td>feat</td><td>新功能增加（feature）</td><td>feat: add user login feature</td></tr><tr><td>fix</td><td>修复 BUG</td><td>fix: correct user authentication</td></tr><tr><td>refactor</td><td>代码重构（既不是新增功能，也不是修复 Bug）</td><td>refactor: simplify user validation logic</td></tr><tr><td>perf</td><td>性能优化</td><td>perf(core): optimize virtual DOM diffing algorithm</td></tr><tr><td>docs</td><td>文档/注释</td><td>docs: update API documentation</td></tr><tr><td>chore</td><td>依赖更新/脚手架配置修改等</td><td>chore: upgrade React to the latest version</td></tr><tr><td>revert</td><td>代码撤销修改</td><td>revert: revert commit 12345abc</td></tr><tr><td>style</td><td>代码风格相关无影响运行结果的</td><td>style: format code with prettier</td></tr><tr><td>test</td><td>测试相关</td><td>test: add unit tests for login feature</td></tr><tr><td>build</td><td>影响构建系统或外部依赖的更改（例如：gulp，broccoli，npm）</td><td>build: update webpack config</td></tr><tr><td>ci</td><td>持续集成的配置文件和脚本的变动（例如：Travis，Circle，BrowserStack，SauceLabs）</td><td>ci: update Travis configuration</td></tr></tbody></table><p>这种方式便于清晰区分每种提交的目的和用途。</p><h3 id="_6-保持本地仓库最新" tabindex="-1">6. 保持本地仓库最新 <a class="header-anchor" href="#_6-保持本地仓库最新" aria-label="Permalink to &quot;6. 保持本地仓库最新&quot;">​</a></h3><p>在准备发起 Pull Request 之前，需要同步原仓库最新的代码，记得检查目前的项目是否是最新的版本。</p><h3 id="_7-推送到远程仓库-push" tabindex="-1">7. 推送到远程仓库（Push） <a class="header-anchor" href="#_7-推送到远程仓库-push" aria-label="Permalink to &quot;7. 推送到远程仓库（Push）&quot;">​</a></h3><p>push 到开发者自己的远程仓库中。</p><h3 id="_8-发起并完成合并请求-pull-request" tabindex="-1">8. 发起并完成合并请求（Pull Request） <a class="header-anchor" href="#_8-发起并完成合并请求-pull-request" aria-label="Permalink to &quot;8. 发起并完成合并请求（Pull Request）&quot;">​</a></h3><p>在 git 仓库中选择自己修改了的分支，点击 create pull request 按钮发起 pull request。</p><h2 id="三、提交代码的一些约定" tabindex="-1">三、提交代码的一些约定 <a class="header-anchor" href="#三、提交代码的一些约定" aria-label="Permalink to &quot;三、提交代码的一些约定&quot;">​</a></h2><p>发起请求成功后，本项目维护人就可以看到你提交的代码。pull request 如果被同意，你的代码就会被合并到仓库中。这样一次 pull request 就成功了。</p><p>至此，我们就完成了一次代码贡献的过程。</p>`,28)])])}const g=a(e,[["render",l]]);export{c as __pageData,g as default};
