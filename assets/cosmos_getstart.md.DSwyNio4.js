import{_ as r,c as a,o as e,ag as o}from"./chunks/framework.Ds6Eueu6.js";const u=JSON.parse('{"title":"快速上手","description":"","frontmatter":{"title":"快速上手","index":false,"icon":"discover","category":["快速上手"]},"headers":[],"relativePath":"cosmos/getstart.md","filePath":"cosmos/getstart.md","lastUpdated":1741732513000}'),n={name:"cosmos/getstart.md"};function i(d,t,s,l,h,g){return e(),a("div",null,t[0]||(t[0]=[o('<h1 id="项目组成" tabindex="-1">项目组成 <a class="header-anchor" href="#项目组成" aria-label="Permalink to &quot;项目组成&quot;">​</a></h1><p>本项目由 <a href="https://github.com/XiHanFun/XiHan.Framework" target="_blank" rel="noreferrer">XiHan.Framework</a>（开发框架）、<a href="https://github.com/XiHanFun/XiHan.UI" target="_blank" rel="noreferrer">XiHan.UI</a>（视图组件）、<a href="https://github.com/XiHanFun/XiHan.BasicApp" target="_blank" rel="noreferrer">XiHan.BasicApp</a>（基础应用）组成。</p><p>开发框架子项目，是后端模块化应用开发框架集成。</p><p>视图组件子项目，是前端组件库集成。</p><p>基础应用子项目，为开发框架和视图组件的结合，为通用、全面的管理系统。</p><h2 id="_1-xihan-framework-开发框架" tabindex="-1">1. XiHan.Framework 开发框架 <a class="header-anchor" href="#_1-xihan-framework-开发框架" aria-label="Permalink to &quot;1. XiHan.Framework 开发框架&quot;">​</a></h2><p>曦寒开发框架是一个模块化的.NET 应用开发框架，提供了丰富的功能模块以简化企业级应用程序的开发。框架采用模块化设计，各个功能模块可以独立使用或组合使用，提供了高度的灵活性和可扩展性。</p><h3 id="核心基础模块" tabindex="-1">核心基础模块 <a class="header-anchor" href="#核心基础模块" aria-label="Permalink to &quot;核心基础模块&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模块名称</th><th>主要功能</th></tr></thead><tbody><tr><td><strong>XiHan.Framework.Core</strong></td><td>框架核心模块，提供模块化基础设施、依赖注入、生命周期管理和基础服务接口</td></tr><tr><td><strong>XiHan.Framework.Utils</strong></td><td>工具类库，提供各种常用工具方法和扩展功能</td></tr><tr><td><strong>XiHan.Framework.Threading</strong></td><td>线程处理模块，提供异步操作、后台任务和线程同步等功能</td></tr></tbody></table><h3 id="基础设施模块" tabindex="-1">基础设施模块 <a class="header-anchor" href="#基础设施模块" aria-label="Permalink to &quot;基础设施模块&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模块名称</th><th>主要功能</th></tr></thead><tbody><tr><td><strong>XiHan.Framework.VirtualFileSystem</strong></td><td>虚拟文件系统，提供统一的文件访问抽象，支持物理文件和嵌入资源</td></tr><tr><td><strong>XiHan.Framework.Serialization</strong></td><td>序列化模块，提供对象序列化和反序列化功能</td></tr><tr><td><strong>XiHan.Framework.Settings</strong></td><td>应用配置管理，提供统一的设置存储和获取机制</td></tr><tr><td><strong>XiHan.Framework.Localization</strong></td><td>本地化和国际化支持，提供多语言翻译和文化适配功能</td></tr><tr><td><strong>XiHan.Framework.Caching</strong></td><td>缓存抽象层，提供统一的缓存接口和内存缓存实现</td></tr><tr><td><strong>XiHan.Framework.Caching.StackExchangeRedis</strong></td><td>Redis 缓存实现，基于 StackExchange.Redis</td></tr><tr><td><strong>XiHan.Framework.BlobStoring</strong></td><td>二进制大对象存储，用于文件和大型数据的存储管理</td></tr></tbody></table><h3 id="领域驱动设计模块" tabindex="-1">领域驱动设计模块 <a class="header-anchor" href="#领域驱动设计模块" aria-label="Permalink to &quot;领域驱动设计模块&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模块名称</th><th>主要功能</th></tr></thead><tbody><tr><td><strong>XiHan.Framework.Ddd.Domain.Shared</strong></td><td>领域共享层，包含跨域对象和常量定义</td></tr><tr><td><strong>XiHan.Framework.Ddd.Domain</strong></td><td>领域层实现，提供实体、聚合根、领域服务等 DDD 概念支持</td></tr><tr><td><strong>XiHan.Framework.Ddd.Application.Contracts</strong></td><td>应用服务契约，定义 DTO 和服务接口</td></tr><tr><td><strong>XiHan.Framework.Ddd.Application</strong></td><td>应用服务实现，处理用户交互和业务流程编排</td></tr><tr><td><strong>XiHan.Framework.EntityFrameworkCore</strong></td><td>EntityFramework Core 集成，提供数据访问和 ORM 支持</td></tr><tr><td><strong>XiHan.Framework.Uow</strong></td><td>工作单元模式实现，管理事务和数据一致性</td></tr></tbody></table><h3 id="web-开发模块" tabindex="-1">Web 开发模块 <a class="header-anchor" href="#web-开发模块" aria-label="Permalink to &quot;Web 开发模块&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模块名称</th><th>主要功能</th></tr></thead><tbody><tr><td><strong>XiHan.Framework.AspNetCore</strong></td><td>ASP.NET Core 集成基础模块，提供 Web 应用开发基础设施</td></tr><tr><td><strong>XiHan.Framework.AspNetCore.Mvc</strong></td><td>MVC 框架集成，提供控制器、视图和模型绑定等功能</td></tr><tr><td><strong>XiHan.Framework.AspNetCore.Swagger</strong></td><td>Swagger/OpenAPI 集成，提供 API 文档生成和测试</td></tr><tr><td><strong>XiHan.Framework.AspNetCore.SignalR</strong></td><td>SignalR 集成，提供实时 Web 通信功能</td></tr><tr><td><strong>XiHan.Framework.AspNetCore.Serilog</strong></td><td>Serilog 日志集成，提供结构化日志记录</td></tr><tr><td><strong>XiHan.Framework.AspNetCore.Scalar</strong></td><td>GraphQL 集成，支持 GraphQL API 开发</td></tr><tr><td><strong>XiHan.Framework.AspNetCore.Refit</strong></td><td>Refit HTTP 客户端集成，简化 API 调用</td></tr></tbody></table><h3 id="认证与安全模块" tabindex="-1">认证与安全模块 <a class="header-anchor" href="#认证与安全模块" aria-label="Permalink to &quot;认证与安全模块&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模块名称</th><th>主要功能</th></tr></thead><tbody><tr><td><strong>XiHan.Framework.Security</strong></td><td>安全基础设施，提供权限管理和安全工具</td></tr><tr><td><strong>XiHan.Framework.AspNetCore.Authentication.JwtBearer</strong></td><td>JWT 认证实现，基于令牌的身份验证</td></tr><tr><td><strong>XiHan.Framework.AspNetCore.Authentication.OAuth</strong></td><td>OAuth 2.0 集成，支持第三方登录</td></tr><tr><td><strong>XiHan.Framework.AspNetCore.Authentication.OpenIdConnect</strong></td><td>OpenID Connect 集成，提供单点登录支持</td></tr><tr><td><strong>XiHan.Framework.MultiTenancy</strong></td><td>多租户架构支持，提供 SaaS 应用开发基础设施</td></tr></tbody></table><h3 id="高级功能模块" tabindex="-1">高级功能模块 <a class="header-anchor" href="#高级功能模块" aria-label="Permalink to &quot;高级功能模块&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模块名称</th><th>主要功能</th></tr></thead><tbody><tr><td><strong>XiHan.Framework.EventBus</strong></td><td>事件总线，提供组件间松耦合的事件发布和订阅</td></tr><tr><td><strong>XiHan.Framework.Gateway</strong></td><td>API 网关，提供路由、负载均衡和 API 聚合功能</td></tr><tr><td><strong>XiHan.Framework.TextTemplating</strong></td><td>文本模板引擎，用于动态生成文本内容如邮件和报告</td></tr><tr><td><strong>XiHan.Framework.SearchEngines</strong></td><td>搜索引擎抽象，提供全文检索能力</td></tr><tr><td><strong>XiHan.Framework.Http</strong></td><td>HTTP 客户端抽象，简化 Web API 调用</td></tr><tr><td><strong>XiHan.Framework.BackgroundWorkers</strong></td><td>后台工作者管理，用于执行周期性任务</td></tr><tr><td><strong>XiHan.Framework.BackgroundJobs</strong></td><td>后台作业管理，用于执行异步长时间任务</td></tr><tr><td><strong>XiHan.Framework.CodeGeneration</strong></td><td>代码生成工具，提高开发效率</td></tr><tr><td><strong>XiHan.Framework.ObjectMapping.Mapster</strong></td><td>基于 Mapster 的对象映射实现</td></tr><tr><td><strong>XiHan.Framework.AI</strong></td><td>人工智能集成，提供 AI 能力的访问接口</td></tr><tr><td><strong>XiHan.Framework.Bot</strong></td><td>聊天机器人功能，支持自动化对话交互</td></tr></tbody></table><h3 id="实时通信模块" tabindex="-1">实时通信模块 <a class="header-anchor" href="#实时通信模块" aria-label="Permalink to &quot;实时通信模块&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模块名称</th><th>主要功能</th></tr></thead><tbody><tr><td><strong>XiHan.Framework.AspNetCore.RealTime.SignalR</strong></td><td>基于 SignalR 的实时通信实现，提供实时消息推送</td></tr></tbody></table><h3 id="日志模块" tabindex="-1">日志模块 <a class="header-anchor" href="#日志模块" aria-label="Permalink to &quot;日志模块&quot;">​</a></h3><table tabindex="0"><thead><tr><th>模块名称</th><th>主要功能</th></tr></thead><tbody><tr><td><strong>XiHan.Framework.AspNetCore.Logging.Serilog</strong></td><td>Serilog 日志框架的 ASP.NET Core 集成</td></tr></tbody></table><hr><p>曦寒框架通过这些模块提供了全面的应用开发支持，从基础设施到领域驱动设计，从 Web 开发到高级功能，使开发人员能够快速构建企业级应用。各模块之间遵循依赖关系设计，可以根据实际需求选择性地使用。</p><h2 id="_2-xihan-ui-视图组件" tabindex="-1">2.XiHan UI 视图组件 <a class="header-anchor" href="#_2-xihan-ui-视图组件" aria-label="Permalink to &quot;2.XiHan UI 视图组件&quot;">​</a></h2><p>曦寒视图组件包含以下模块：</p><h3 id="核心包-xihan-ui" tabindex="-1">核心包 (xihan-ui) <a class="header-anchor" href="#核心包-xihan-ui" aria-label="Permalink to &quot;核心包 (xihan-ui)&quot;">​</a></h3><ul><li><strong>功能</strong>：整合所有子模块，提供完整的组件库解决方案</li><li><strong>依赖</strong>：集成了所有其他子包，作为统一入口</li></ul><h3 id="组件-components" tabindex="-1">组件 (components) <a class="header-anchor" href="#组件-components" aria-label="Permalink to &quot;组件 (components)&quot;">​</a></h3><ul><li><strong>功能</strong>：提供各种 UI 组件，如按钮、表单、导航等</li><li><strong>特点</strong>：组件设计遵循原子设计系统，支持按需引入</li><li><strong>依赖</strong>：使用 hooks、directives、themes 等支持组件功能</li></ul><h3 id="工具库-utils" tabindex="-1">工具库 (utils) <a class="header-anchor" href="#工具库-utils" aria-label="Permalink to &quot;工具库 (utils)&quot;">​</a></h3><ul><li><strong>功能</strong>：提供基础工具函数，分为核心、浏览器、格式化、Vue、安全、CSS 等模块</li><li><strong>特点</strong>：轻量级、高效，支持 Tree Shaking</li></ul><h3 id="主题系统-themes" tabindex="-1">主题系统 (themes) <a class="header-anchor" href="#主题系统-themes" aria-label="Permalink to &quot;主题系统 (themes)&quot;">​</a></h3><ul><li><strong>功能</strong>：基于 CSS 变量的主题引擎，支持明暗模式切换</li><li><strong>特点</strong>：可扩展的设计令牌系统，支持自定义主题</li></ul><h3 id="钩子函数-hooks" tabindex="-1">钩子函数 (hooks) <a class="header-anchor" href="#钩子函数-hooks" aria-label="Permalink to &quot;钩子函数 (hooks)&quot;">​</a></h3><ul><li><strong>功能</strong>：提供可复用的组合式函数，如 useForm、useValidation 等</li><li><strong>特点</strong>：基于 Vue Composition API，增强组件逻辑复用</li></ul><h3 id="指令-directives" tabindex="-1">指令 (directives) <a class="header-anchor" href="#指令-directives" aria-label="Permalink to &quot;指令 (directives)&quot;">​</a></h3><ul><li><strong>功能</strong>：提供自定义指令，如 v-click-outside、v-resize 等</li><li><strong>特点</strong>：增强 DOM 交互能力，简化常见操作</li></ul><h3 id="图标-icons" tabindex="-1">图标 (icons) <a class="header-anchor" href="#图标-icons" aria-label="Permalink to &quot;图标 (icons)&quot;">​</a></h3><ul><li><strong>功能</strong>：提供统一的图标系统</li><li><strong>特点</strong>：支持按需加载和自定义颜色、大小</li></ul><h3 id="本地化-locales" tabindex="-1">本地化 (locales) <a class="header-anchor" href="#本地化-locales" aria-label="Permalink to &quot;本地化 (locales)&quot;">​</a></h3><ul><li><strong>功能</strong>：提供国际化解决方案，支持多语言切换</li><li><strong>特点</strong>：内置中英文等常用语言包，支持自定义扩展</li></ul><h3 id="插件-plugins" tabindex="-1">插件 (plugins) <a class="header-anchor" href="#插件-plugins" aria-label="Permalink to &quot;插件 (plugins)&quot;">​</a></h3><ul><li><strong>功能</strong>：提供全局功能扩展，如通知、消息等</li><li><strong>特点</strong>：可独立使用的轻量级插件系统</li></ul><h3 id="常量-constants" tabindex="-1">常量 (constants) <a class="header-anchor" href="#常量-constants" aria-label="Permalink to &quot;常量 (constants)&quot;">​</a></h3><ul><li><strong>功能</strong>：提供全局常量定义，如尺寸、状态等</li><li><strong>特点</strong>：确保设计一致性和代码统一性</li></ul><p>每个模块都遵循相同的构建和发布标准，支持 ESM 和 UMD 双模式输出，确保了组件库的可扩展性和可维护性。整体架构采用了微内核设计，通过依赖注入和插件系统实现高度解耦。</p><h2 id="_3-xihan-basicapp-基础应用" tabindex="-1">3. XiHan.BasicApp 基础应用 <a class="header-anchor" href="#_3-xihan-basicapp-基础应用" aria-label="Permalink to &quot;3. XiHan.BasicApp 基础应用&quot;">​</a></h2><p>曦寒基础应用采用了领域驱动设计(DDD)的架构，按照功能模块进行组织。主要分为三个主要部分：</p><ol><li><code>modules</code> - 通用功能模块</li><li><code>business</code> - 业务模块</li><li><code>main</code> - 核心应用和主机</li></ol><h3 id="通用功能模块-modules" tabindex="-1">通用功能模块 (modules) <a class="header-anchor" href="#通用功能模块-modules" aria-label="Permalink to &quot;通用功能模块 (modules)&quot;">​</a></h3><ol><li><p>角色权限控制模块 (Rbac)</p></li><li><p>代码生成模块 (CodeGeneration)</p></li></ol><h3 id="业务模块-business" tabindex="-1">业务模块 (business) <a class="header-anchor" href="#业务模块-business" aria-label="Permalink to &quot;业务模块 (business)&quot;">​</a></h3><p>业务模块包含特定业务领域的实现：</p><ol><li><p>你的具体业务1</p></li><li><p>你的具体业务2</p></li><li><p>……</p></li></ol><h3 id="核心应用-main" tabindex="-1">核心应用 (main) <a class="header-anchor" href="#核心应用-main" aria-label="Permalink to &quot;核心应用 (main)&quot;">​</a></h3><ol><li><p>应用核心</p></li><li><p>主机</p></li></ol><p>XiHan.BasicApp是一个模块化的.NET应用，采用了DDD架构，包含了角色权限控制和代码生成等功能模块。</p>',59)]))}const b=r(n,[["render",i]]);export{u as __pageData,b as default};
